// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String // Hashed password
  avatarUrl String? // Optional profile picture
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  messages Message[]
}

model Room {
  id        String   @id @default(uuid())
  name      String
  isPublic  Boolean  @default(true) // Public or private room
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  messages   Message[]
  canvas Canvas?
}

model Message {
  id        String   @id @default(uuid())
  userId    String
  roomId    String
  content   String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
}

model Canvas {
  id        String   @id @default(uuid())
  roomId    String   @unique
  data      Json? // Stores the canvas as a JSON object
  updatedAt DateTime @updatedAt

  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
}
